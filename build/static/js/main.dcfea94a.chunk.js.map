{"version":3,"sources":["components/Todo.js","components/AllTodos.js","components/Days.js","components/Loading.js","components/Calendar.js","components/Header.js","components/NewTodo.js","components/Today.js","Firebase/firebase.js","components/Login.js","components/Notes.js","components/NewNote.js","components/Edit.js","components/WeekLayout.js","components/WeekHeader.js","components/Info.js","App.js","index.js"],"names":["Todo","todo","onDelete","onToggle","editTodo","className","done","onClick","text","time","date","style","color","cursor","fontSize","id","_id","marginLeft","marginRight","AllTodos","todos","undefined","sort","a","b","moment","filter","map","Days","formatDate","day","api","month","clickedDay","colorDayHandler","currentDay","format","totalTodos","apiId","onMouseDown","e","document","querySelectorAll","forEach","node","classList","remove","target","length","theDay","slice","year","mon","replace","parentNode","datum","helgdag","Loading","type","height","width","updateLocale","week","dow","Calendar","days","currentDays","emptyDays","firstDayOfMonth","parseDays","parseInt","blanks","i","push","weekdayshortname","weekdaysShort","answer","useState","colorDay","setColorDay","useEffect","getElementById","add","blank","monthInNr","Header","weekLayout","setWeekLayout","formatMonth","firstName","user","split","weekLayoutHandler","logOutHandler","changeMonth","NewTodo","change","setChange","setTime","timeTo","setTimeTo","onSubmit","sendInfo","preventDefault","inputToDo","value","onChange","placeholder","maxLength","required","name","Today","openInfo","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","Login","userInfo","newUserInfo","errorMsg","emailExist","googleLogin","email","setEmail","password","setPassword","hasAccount","setHasAccount","newUserName","setNewUserName","newEmail","setNewEmail","newPassword","setNewPassword","provider","GoogleAuthProvider","signInWithPopup","res","googleUserInfo","userName","displayName","console","log","toLowerCase","pwType","src","alt","passWord","pw","Notes","notes","note","NewNote","newNote","Edit","updatedTodo","closeEdit","theTodo","setTheTodo","editRef","useRef","handler","event","current","contains","addEventListener","removeEventListener","prevState","ref","WeekLayout","weekDates","hoursInDay","weekdayshort","hour","WeekHeader","changeWeek","Info","App","setUser","setErrorMsg","setEmailExist","signOut","setMonthInNr","minusMonth","cMonth","monthDate","monthNr","plusMonth","apiYear","setApiYear","setApi","useMonth","HOLIDAY_API","fetch","then","resp","json","data","dagar","catch","error","setDays","setEmptyDays","currentMonthDates","Array","from","daysInMonth","x","startOf","getDaysArrayByMonth","firstDay","getEmptyDays","setClickedDay","newTodoDay","setNewTodoDay","setWeek","setWeekDates","startOfWeek","endOfWeek","endOf","dayss","clone","minusWeek","cWeek","newWeek","plusWeek","setTodos","userId","method","headers","body","JSON","stringify","getUsersTodos","deleteTask","todoId","jsonRes","toggleReminder","trueOrFalse","todoEdit","setTodoEdit","setNotes","showInfo","setShowInfo","info","username","newUser","googleUser","err","newMonth","saveTodo","noteId","saveNote","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dcfea94a.chunk.js","sourcesContent":["import React from 'react';\nimport { BiCheck, BiTrash } from 'react-icons/bi';\n\nfunction Todo({ todo, onDelete, onToggle, editTodo }) {\n    return (\n        <div className='todo'>\n            <div className={`${todo.done === true ? 'reminder' : ''}`}>\n                <div\n                    className='todo-click-box'\n                    onClick={() => {\n                        editTodo(todo);\n                    }}\n                >\n                    <span className='todo-text'>{todo.text}</span>\n                    <span className='todo-time_date'>{todo.time}</span>\n                    <span className='todo-time_date'>{todo.date}</span>\n                </div>\n                <div>\n                    <BiCheck\n                        style={{\n                            color: '#777777',\n                            cursor: 'pointer',\n                            fontSize: '1.1rem',\n                        }}\n                        onClick={() =>\n                            onToggle({\n                                id: todo._id,\n                                done: todo.done,\n                            })\n                        }\n                    />\n                    <BiTrash\n                        style={{\n                            color: '#777777',\n                            cursor: 'pointer',\n                            marginLeft: '1px',\n                            marginRight: '-5px',\n                        }}\n                        onClick={() => onDelete(todo._id)}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Todo;\n","import moment from 'moment';\nimport React from 'react';\nimport Todo from './Todo';\n\nfunction AllTodos({ todos, onDelete, onToggle, editTodo }) {\n    if (todos === undefined) {\n        return (\n            <div className='aside-container alltodos-container loading'>\n                Loading...\n            </div>\n        );\n    } else {\n        return (\n            <div className='aside-container alltodos-container'>\n                <h1>All Todos</h1>\n                {todos\n                    .sort((a, b) =>\n                        moment(b.date, 'DD-MM-YYYY') <\n                        moment(a.date, 'DD-MM-YYYY')\n                            ? 1\n                            : -1\n                    )\n                    .filter((todo) => todo.done === false)\n                    .map((todo) => (\n                        <Todo\n                            key={todo._id}\n                            todo={todo}\n                            onDelete={onDelete}\n                            onToggle={onToggle}\n                            editTodo={editTodo}\n                        />\n                    ))}\n            </div>\n        );\n    }\n}\n\nexport default AllTodos;\n","import moment from 'moment';\nimport React from 'react';\n\nfunction Days({ day, api, month, clickedDay, colorDayHandler, todos }) {\n    let formatDate;\n    let currentDay = moment().format('DD-MM-YYYY');\n    if (day === '31') {\n        formatDate = 31;\n    } else {\n        formatDate = moment(day, 'DD-MM-YYYY').format('D');\n    }\n\n    const clickedDayy = (e) => {\n        if (e.target.id.length === 10) {\n            let id = e.target.id;\n            let date = id.slice(-2);\n            let year = id.slice(-7, -2);\n            let mon = id.replace(/ .*/, '');\n            let theDay = { date: date, year: year, mon: mon, id: e.target.id };\n            clickedDay(theDay);\n            colorDayHandler(id);\n        } else {\n            let id = e.target.parentNode.id;\n            let date = id.slice(-2);\n            let year = id.slice(-7, -2);\n            let mon = id.replace(/ .*/, '');\n            let theDay = {\n                date: date,\n                year: year,\n                mon: mon,\n                id: e.target.parentNode.id,\n            };\n            clickedDay(theDay);\n            colorDayHandler(id);\n        }\n    };\n\n    const onMouseDown = (e) => {\n        document.querySelectorAll('*').forEach(function (node) {\n            node.classList.remove('clickedday');\n        });\n    };\n\n    if (todos === undefined) {\n        return <div></div>;\n    } else {\n        let id = day + '-' + month;\n        let totalTodos = 0;\n        let apiId = moment(id, 'DD-MM-YYYY').format('YYYY-MM-DD');\n\n        return (\n            <div\n                onMouseDown={onMouseDown}\n                onClick={clickedDayy}\n                id={id}\n                className={`${\n                    id === currentDay\n                        ? 'days-day_cont currentday'\n                        : 'days-day_cont'\n                }`}\n            >\n                <h3>\n                    {formatDate}\n                    {api\n                        .filter((a) => a.datum === apiId)\n                        .map((a) => {\n                            return (\n                                <span className='days-api' key={a.datum}>\n                                    {a.helgdag}\n                                </span>\n                            );\n                        })}\n                </h3>\n                {todos\n                    .sort((a, b) => (b.time < a.time ? 1 : -1))\n                    .filter((todo) => todo.date === id)\n                    .map((todo) => {\n                        totalTodos++;\n                        return (\n                            <div className='inline day-todo' key={todo._id}>\n                                <span className='dot'>・</span>\n                                {todo.text}\n                            </div>\n                        );\n                    })}\n                <div className='days-todo_count'>\n                    {totalTodos === 0 ? '' : totalTodos + ' Todo:'}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Days;\n","import React from 'react';\nimport ReactLoading from 'react-loading';\n\nfunction Loading() {\n    return (\n        <ReactLoading\n            type='spin'\n            color='rgb(241, 136, 139)'\n            height={'15%'}\n            width={'15%'}\n            className='loading'\n        />\n    );\n}\n\nexport default Loading;\n","import moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport Days from './Days';\nimport Loading from './Loading';\n\nmoment.updateLocale('sv', {\n    week: {\n        dow: 1,\n    },\n});\n\nfunction Calendar(days) {\n    let currentDays = days.days;\n\n    let emptyDays = days.firstDayOfMonth;\n    let parseDays = parseInt(emptyDays, 10);\n    let blanks = [];\n    for (let i = 0; i < parseDays; i++) {\n        blanks.push(i);\n    }\n\n    let weekdayshort = moment.weekdaysShort(true);\n    const weekdayshortname = weekdayshort.map((day) => {\n        return (\n            <div className='weekdays-day_cont' key={day}>\n                {day}\n            </div>\n        );\n    });\n\n    const clickedDay = (answer) => {\n        days.clickedDay(answer);\n    };\n\n    let [colorDay, setColorDay] = useState('');\n    const colorDayHandler = (id) => {\n        setColorDay(id);\n    };\n\n    useEffect(() => {\n        if (colorDay === '') {\n            return;\n        } else {\n            let elem = document.getElementById(colorDay);\n            elem.classList.add('clickedday');\n        }\n    }, [colorDay]);\n\n    return (\n        <section className='calendar-container'>\n            <div className='weekdays-container'>{weekdayshortname}</div>\n            <div className='days-container'>\n                {blanks.map((blank, i) => (\n                    <div key={i} className='days-day_cont empty'></div>\n                ))}\n                {currentDays !== undefined ? (\n                    currentDays.map((day) => (\n                        <Days\n                            key={days.monthInNr + day}\n                            month={days.monthInNr}\n                            day={day}\n                            api={days.api}\n                            clickedDay={clickedDay}\n                            colorDayHandler={colorDayHandler}\n                            todos={days.todos}\n                        />\n                    ))\n                ) : (\n                    <Loading />\n                )}\n            </div>\n        </section>\n    );\n}\n\nexport default Calendar;\n","import moment from 'moment';\nimport React, { useState } from 'react';\nimport {\n    BiChevronLeft,\n    BiChevronRight,\n    BiCalendarWeek,\n    BiCalendar,\n} from 'react-icons/bi';\n\nfunction Header(month) {\n    let [weekLayout, setWeekLayout] = useState(false);\n\n    let formatMonth = moment(month.month, 'MM-YYYY').format('MMMM YYYY');\n\n    const back = () => {\n        month.changeMonth('back');\n    };\n\n    const forward = () => {\n        month.changeMonth('forward');\n    };\n\n    const changeLayout = () => {\n        setWeekLayout(!weekLayout);\n        month.weekLayoutHandler('change');\n    };\n\n    let myStr = month.user;\n    let firstName = myStr.split(' ')[0];\n\n    return (\n        <header>\n            <div className='header-name_btn'>\n                <div className='header-username'>{firstName}</div>\n                <div className='header-icon_btn'>\n                    <BiCalendarWeek\n                        className='header-calendar-icon'\n                        onClick={changeLayout}\n                    />\n\n                    <button onClick={month.logOutHandler} className='logOutBtn'>\n                        Sign out\n                    </button>\n                </div>\n            </div>\n            <div className='header'>\n                <BiChevronLeft\n                    type='submit'\n                    onClick={back}\n                    className='header-arrow'\n                />\n                <h1>{formatMonth}</h1>\n                <BiChevronRight\n                    type='submit'\n                    onClick={forward}\n                    className='header-arrow'\n                />\n            </div>\n        </header>\n    );\n}\n\nexport default Header;\n","import React, { useState } from 'react';\n\nfunction NewTodo(day) {\n    let [change, setChange] = useState('');\n    let [time, setTime] = useState('');\n    let [timeTo, setTimeTo] = useState('');\n\n    const onChange = (e) => {\n        setChange(e.target.value);\n    };\n\n    const timeHandler = (e) => {\n        setTime(e.target.value);\n    };\n\n    const timeHandlerTo = (e) => {\n        setTimeTo(e.target.value);\n    };\n\n    const onSubmit = (e) => {\n        let sendInfo = { text: change, time: time, timeTo: timeTo };\n\n        e.preventDefault();\n        day.inputToDo(sendInfo);\n        setChange('');\n        setTime();\n        setTimeTo();\n        document.getElementById('appt').value = '';\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <input\n                    onChange={onChange}\n                    type='text'\n                    value={change}\n                    placeholder='New Todo'\n                    id='newTodoInput'\n                    maxLength='30'\n                    required\n                />\n                <div className='time_addBtn'>\n                    <div>\n                        <input\n                            type='time'\n                            id='appt'\n                            className='appt'\n                            name='appt'\n                            onChange={timeHandler}\n                        />\n                        <span>{' - '}</span>\n                        <input\n                            type='time'\n                            id='apptTo'\n                            className='appt'\n                            name='apptTo'\n                            onChange={timeHandlerTo}\n                        />\n                    </div>\n                    <button type='submit' id='newTodoBtn'>\n                        Add\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default NewTodo;\n","import moment from 'moment';\nimport React from 'react';\nimport { BiCheck, BiTrash, BiHelpCircle } from 'react-icons/bi';\n\nfunction Today({ clickedDay, todos, onDelete, onToggle, editTodo, openInfo }) {\n    let formatDate = moment(clickedDay, 'DD-MM-YYYY').format('D MMMM YY');\n    if (todos === undefined) {\n        return <div className='aside-container loading'>Loading...</div>;\n    } else {\n        return (\n            <article className='today-todo_container'>\n                <div\n                    onClick={() => {\n                        openInfo('change');\n                    }}\n                >\n                    <BiHelpCircle className='info-icon' />\n                </div>\n                <h1>{formatDate}</h1>\n                {todos\n                    .sort((a, b) => (b.time < a.time ? 1 : -1))\n                    .filter((todo) => todo.date === clickedDay)\n                    .map((todo) => (\n                        <div className='todo' key={todo._id}>\n                            <div\n                                className={`${\n                                    todo.done === true ? 'reminder' : ''\n                                }`}\n                            >\n                                <div\n                                    className='todo-click-box'\n                                    onClick={() => {\n                                        editTodo(todo);\n                                    }}\n                                >\n                                    <span className='todo-text'>\n                                        {todo.text}\n                                    </span>\n                                    {'  '}\n                                    <div className='time-flex'>\n                                        <span className='todo-time_date'>\n                                            {todo.time}{' '}\n                                        </span>\n                                        <span className='todo-time_date'>\n                                            {!todo.timeTo ||\n                                            todo.timeTo === '' ? (\n                                                ' '\n                                            ) : (\n                                                <span className='time-dash'>\n                                                    -\n                                                </span>\n                                            )}\n                                            {todo.timeTo}\n                                        </span>\n                                    </div>\n                                    <span className='todo-time_date'>\n                                        {todo.date}\n                                    </span>\n                                </div>\n                                <div>\n                                    <BiCheck\n                                        style={{\n                                            color: '#777777',\n                                            cursor: 'pointer',\n                                            fontSize: '1.1rem',\n                                        }}\n                                        onClick={() =>\n                                            onToggle({\n                                                id: todo._id,\n                                                done: todo.done,\n                                            })\n                                        }\n                                    />\n                                    <BiTrash\n                                        style={{\n                                            color: '#777777',\n                                            cursor: 'pointer',\n                                            marginLeft: '1px',\n                                            marginRight: '-5px',\n                                        }}\n                                        onClick={() => onDelete(todo._id)}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n            </article>\n        );\n    }\n}\n\nexport default Today;\n","import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const auth = getAuth(app);\n","import React, { useState } from 'react';\nimport { auth } from '../Firebase/firebase';\nimport { signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\n\nfunction Login({ userInfo, newUserInfo, errorMsg, emailExist, googleLogin }) {\n    let [email, setEmail] = useState('');\n    let [password, setPassword] = useState('');\n    let [hasAccount, setHasAccount] = useState(true);\n\n    let [newUserName, setNewUserName] = useState('');\n    let [newEmail, setNewEmail] = useState('');\n    let [newPassword, setNewPassword] = useState('');\n\n    const emailHandler = (e) => {\n        setEmail(e.target.value.toLowerCase());\n    };\n\n    const pWordHandler = (e) => {\n        setPassword(e.target.value);\n    };\n\n    async function signInWithGoogle() {\n        const provider = new GoogleAuthProvider();\n        try {\n            const res = await signInWithPopup(auth, provider);\n            let googleUserInfo = {\n                email: res.user.email,\n                userName: res.user.displayName,\n            };\n            googleLogin(googleUserInfo);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const newUserHandler = (e) => {\n        e.preventDefault();\n\n        let newUser = {\n            userName: newUserName,\n            email: newEmail,\n            passWord: newPassword,\n        };\n\n        newUserInfo(newUser);\n    };\n\n    const sendUserInfo = (e) => {\n        e.preventDefault();\n        let info = { email, password };\n        userInfo(info);\n    };\n\n    const showPassword = () => {\n        let pwType = document.getElementById('passWord');\n        if (pwType.type === 'password') {\n            pwType.type = 'text';\n        } else {\n            pwType.type = 'password';\n        }\n    };\n\n    const showNewPassword = () => {\n        let pw = document.getElementById('newPassWord');\n        if (pw.type === 'password') {\n            pw.type = 'text';\n        } else {\n            pw.type = 'password';\n        }\n    };\n\n    return (\n        <>\n            {hasAccount ? (\n                <div className='login-page'>\n                    <div id='logInContainer'>\n                        <div id='logInInputs'>\n                            <form onSubmit={sendUserInfo}>\n                                <input\n                                    type='email'\n                                    placeholder='EMAIL'\n                                    id='userName'\n                                    className='logInField'\n                                    onChange={emailHandler}\n                                    value={email}\n                                    required\n                                />\n                                <input\n                                    type='password'\n                                    placeholder='PASSWORD'\n                                    id='passWord'\n                                    className='logInField'\n                                    onChange={pWordHandler}\n                                    value={password}\n                                    required\n                                />\n                                <div\n                                    className='eye-icon'\n                                    onClick={showPassword}\n                                >\n                                    Show password\n                                </div>\n                                {errorMsg ? (\n                                    <p id='errorMsg'>Sorry, invalid login!</p>\n                                ) : (\n                                    ''\n                                )}\n                                <button type='submit' id='logInBtn'>\n                                    Sign in\n                                </button>\n                                <p\n                                    onClick={() => setHasAccount(!hasAccount)}\n                                    id='signUp'\n                                >\n                                    Create account\n                                </p>\n                                <hr />\n                                <h4>OR</h4>\n                                <div\n                                    className='google-btn'\n                                    onClick={signInWithGoogle}\n                                >\n                                    <div className='google-icon-wrapper'>\n                                        <img\n                                            className='google-icon'\n                                            src='https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg'\n                                            alt='google icon'\n                                        />\n                                    </div>\n                                    <p className='btn-text'>\n                                        <b>Sign in with google</b>\n                                    </p>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className='login-page'>\n                    <div id='newLogInContainer'>\n                        <div id='logInInputs'>\n                            <form onSubmit={newUserHandler}>\n                                <input\n                                    type='text'\n                                    placeholder='CHOOSE NAME'\n                                    id='newUserName'\n                                    className='logInField'\n                                    required='required'\n                                    onChange={(e) =>\n                                        setNewUserName(e.target.value)\n                                    }\n                                    value={newUserName}\n                                />\n                                <input\n                                    type='email'\n                                    placeholder='CHOOSE EMAIL'\n                                    id='newEmail'\n                                    className='logInField'\n                                    required='required'\n                                    onChange={(e) =>\n                                        setNewEmail(\n                                            e.target.value.toLowerCase()\n                                        )\n                                    }\n                                    value={newEmail}\n                                />\n                                <input\n                                    type='password'\n                                    placeholder='CHOOSE PASSWORD'\n                                    id='newPassWord'\n                                    className='logInField'\n                                    required='required'\n                                    onChange={(e) =>\n                                        setNewPassword(e.target.value)\n                                    }\n                                    value={newPassword}\n                                />\n                                <div\n                                    className='eye-icon new-icon'\n                                    onClick={showNewPassword}\n                                >\n                                    Show password\n                                </div>\n                                {emailExist ? (\n                                    <p id='errorMsg'>Email already exist!</p>\n                                ) : (\n                                    ''\n                                )}\n                                <button id='createAccount'>\n                                    Create account\n                                </button>\n                                <p\n                                    onClick={() => setHasAccount(!hasAccount)}\n                                    id='signUp'\n                                >\n                                    Have an account? Sign in\n                                </p>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default Login;\n","import React from 'react';\nimport { BiTrash } from 'react-icons/bi';\n\nfunction Notes({ notes, onDelete }) {\n    if (notes === undefined) {\n        return <div className='aside-container loading'>Loading...</div>;\n    } else {\n        return (\n            <article className='today-todo_container'>\n                <h1>Notes</h1>\n                {notes.map((note) => (\n                    <div className='todo' key={note._id}>\n                        <div>\n                            {note.note}\n                            {'  '}\n                            <div>\n                                <BiTrash\n                                    style={{\n                                        color: '#777777',\n                                        cursor: 'pointer',\n                                        marginLeft: '1px',\n                                        marginRight: '-5px',\n                                    }}\n                                    onClick={() => onDelete(note._id)}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </article>\n        );\n    }\n}\n\nexport default Notes;\n","import React, { useState } from 'react';\n\nfunction NewNote({ newNote }) {\n    let [change, setChange] = useState('');\n\n    const onChange = (e) => {\n        setChange(e.target.value);\n    };\n\n    const onSubmit = (e) => {\n        let sendInfo = change;\n\n        e.preventDefault();\n        newNote(sendInfo);\n        setChange('');\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <input\n                    onChange={onChange}\n                    type='text'\n                    value={change}\n                    placeholder='New Note'\n                    id='newNoteInput'\n                    required\n                />\n                <button type='submit' id='newNoteBtn'>\n                    add\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewNote;\n","import React, { useState, useEffect, useRef } from 'react';\n\nfunction Edit({ todo, updatedTodo, closeEdit }) {\n    let [theTodo, setTheTodo] = useState(todo);\n    let editRef = useRef();\n\n    useEffect(() => {\n        let handler = (event) => {\n            if (!editRef.current.contains(event.target)) {\n                closeEdit('');\n            }\n        };\n\n        document.addEventListener('mousedown', handler);\n\n        return () => {\n            document.removeEventListener('mousedown', handler);\n        };\n    });\n\n    const onChange = (event) => {\n        setTheTodo((prevState) => ({\n            ...prevState,\n            [event.target.id]: event.target.value,\n        }));\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        console.log(theTodo);\n        updatedTodo(theTodo);\n    };\n\n    return (\n        <div className='edit-container' ref={editRef}>\n            <form onSubmit={onSubmit}>\n                <input\n                    type='text'\n                    value={theTodo.text}\n                    onChange={onChange}\n                    id='text'\n                />\n                <br />\n                <input\n                    type='time'\n                    value={theTodo.time}\n                    onChange={onChange}\n                    id='time'\n                />\n                <input\n                    type='time'\n                    value={theTodo.timeTo}\n                    onChange={onChange}\n                    id='timeTo'\n                />\n                <br />\n\n                <input\n                    type='text'\n                    value={theTodo.date}\n                    onChange={onChange}\n                    id='date'\n                />\n                <br />\n\n                <button type='submit'>Save</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Edit;\n","import React from 'react';\nimport moment from 'moment';\n\nmoment.updateLocale('sv', {\n    week: {\n        dow: 1,\n    },\n});\n\nfunction WeekLayout({ weekDates, todos, monthInNr }) {\n    console.log(todos);\n    console.log(monthInNr);\n    let hoursInDay = [\n        '06:00',\n        '06:30',\n        '07:00',\n        '07:30',\n        '08:00',\n        '08:30',\n        '09:00',\n        '09:30',\n        '10:00',\n        '10:30',\n        '11:00',\n        '11:30',\n        '12:00',\n        '12:30',\n        '13:00',\n        '13:30',\n        '14:00',\n        '14:30',\n        '15:00',\n        '15:30',\n        '16:00',\n        '16:30',\n        '17:00',\n        '17:30',\n        '18:00',\n        '18:30',\n        '19:00',\n        '19:30',\n        '20:00',\n        '20:30',\n        '21:00',\n        '21:30',\n        '22:00',\n        '22:30',\n        '23:00',\n        '23:30',\n        '24:00',\n    ];\n\n    let weekdayshort = moment.weekdaysShort(true);\n\n    return (\n        <div className='weekLayout'>\n            <div className='weekLayout-container'>\n                <div className='weekLayout-weekdays'>\n                    {weekdayshort.map((day) => (\n                        <div className='weekLayout-weekdays_day' key={day}>\n                            {day}\n                        </div>\n                    ))}\n                </div>\n                <div className='weekLayout-column-container'>\n                    {weekDates.map((date) => (\n                        <div\n                            className='weekLayout-column'\n                            id={date + '-' + monthInNr}\n                        >\n                            <div className='weekLayout-dates' key={date}>\n                                {date}\n                            </div>\n\n                            <div className='weekLayout-column-border'>\n                                {hoursInDay.map((hour) => (\n                                    <div\n                                        className='weekLayout-hour_container'\n                                        id={hour}\n                                    >\n                                        {hour}\n                                        {todos\n                                            .sort((a, b) =>\n                                                b.time < a.time ? 1 : -1\n                                            )\n                                            .filter(\n                                                (todo) =>\n                                                    todo.date ===\n                                                        date +\n                                                            '-' +\n                                                            monthInNr &&\n                                                    todo.time === hour\n                                            )\n                                            .map((todo) => {\n                                                console.log(\n                                                    date + '-' + monthInNr,\n                                                    ' ',\n                                                    hour\n                                                );\n                                                return (\n                                                    <div\n                                                        className='inline day-todo'\n                                                        id='colorHourDiv'\n                                                        key={todo._id}\n                                                    >\n                                                        {todo.text}\n                                                    </div>\n                                                );\n                                            })}\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default WeekLayout;\n","import React, { useState } from 'react';\n\nimport { BiChevronLeft, BiChevronRight, BiCalendar } from 'react-icons/bi';\n\nfunction WeekHeader({\n    week,\n    changeWeek,\n    weekLayoutHandler,\n    user,\n    logOutHandler,\n}) {\n    let [weekLayout, setWeekLayout] = useState(false);\n\n    const back = () => {\n        changeWeek('back');\n    };\n\n    const forward = () => {\n        changeWeek('forward');\n    };\n\n    const changeLayout = () => {\n        setWeekLayout(!weekLayout);\n        weekLayoutHandler('change');\n    };\n\n    let myStr = user;\n    let firstName = myStr.split(' ')[0];\n\n    return (\n        <header>\n            <div className='header-name_btn'>\n                <div className='header-username'>{firstName}</div>\n                <div className='header-icon_btn'>\n                    <BiCalendar\n                        className='header-calendar-icon'\n                        onClick={changeLayout}\n                    />\n                    <button onClick={logOutHandler} className='logOutBtn'>\n                        Sign out\n                    </button>\n                </div>\n            </div>\n            <div className='header'>\n                <BiChevronLeft\n                    type='submit'\n                    onClick={back}\n                    className='header-arrow'\n                />\n                <h1>Week {week}</h1>\n                <BiChevronRight\n                    type='submit'\n                    onClick={forward}\n                    className='header-arrow'\n                />\n            </div>\n        </header>\n    );\n}\n\nexport default WeekHeader;\n","import React, { useState, useEffect, useRef } from 'react';\n\nfunction Info({ closeEdit }) {\n    let editRef = useRef();\n\n    useEffect(() => {\n        let handler = (event) => {\n            if (!editRef.current.contains(event.target)) {\n                closeEdit('');\n            }\n        };\n\n        document.addEventListener('mousedown', handler);\n\n        return () => {\n            document.removeEventListener('mousedown', handler);\n        };\n    });\n\n    return (\n        <div className='edit-container info-text' ref={editRef}>\n            Add a new todo by clicking on a day. Enter your activity and time,\n            then press ADD. <br />\n            <br />\n            You can change a todo by clicking on it, make your changes then\n            press SAVE.\n            <br />\n            <br />\n            You can delete a todo or mark a todo as completed. All todos that\n            have not been completed can be seen below. <br />\n            <br />\n            You can write general notes that do not belong to a specific day.\n        </div>\n    );\n}\n\nexport default Info;\n","import moment from 'moment';\nimport { useState, useEffect } from 'react';\nimport './css/style.css';\nimport AllTodos from './components/AllTodos';\nimport Calendar from './components/Calendar';\nimport Header from './components/Header';\nimport NewTodo from './components/NewTodo';\nimport Today from './components/Today';\nimport Login from './components/Login';\nimport Notes from './components/Notes';\nimport NewNote from './components/NewNote';\nimport Edit from './components/Edit';\nimport { auth } from './Firebase/firebase';\nimport { signOut } from 'firebase/auth';\nimport WeekLayout from './components/WeekLayout';\nimport WeekHeader from './components/WeekHeader';\nimport Info from './components/Info';\n\nmoment.updateLocale('sv', {\n    week: {\n        dow: 1,\n    },\n});\n\nfunction App() {\n    // - - - - -  - -  LOGIN / USER - - - -  - - - //\n    let [user, setUser] = useState('');\n    let [errorMsg, setErrorMsg] = useState();\n    let [emailExist, setEmailExist] = useState();\n\n    // USER\n    const userInfo = (info) => {\n        fetch('https://calendar-backend-mathildap.herokuapp.com/users', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({ info }),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                if (jsonRes === 'error') {\n                    setErrorMsg('error');\n                    return;\n                }\n                setUser({ userName: jsonRes.username, id: jsonRes.id });\n                setErrorMsg();\n            });\n    };\n\n    // NEW USER\n    const newUserInfo = (newUser) => {\n        fetch('https://calendar-backend-mathildap.herokuapp.com/users/new', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({ newUser }),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                if (jsonRes === 'email exist') {\n                    setEmailExist('email exist');\n                    return;\n                }\n                setUser({ userName: jsonRes.username, id: jsonRes.id });\n                setEmailExist();\n            });\n    };\n\n    // GOOGLE LOGIN\n    const googleLogin = (info) => {\n        fetch(\n            'https://calendar-backend-mathildap.herokuapp.com/users/googleLogin',\n            {\n                method: 'post',\n                headers: { 'Content-type': 'application/json' },\n                body: JSON.stringify({ info }),\n            }\n        )\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                const googleUser = {\n                    userName: jsonRes.username,\n                    id: jsonRes.id,\n                    googleLogin: jsonRes.googleLogin,\n                };\n                setUser(googleUser);\n            })\n            .catch((err) => console.log(err));\n    };\n\n    // LOG OUT\n    const logOutHandler = () => {\n        setUser('');\n        if (user.googleLogin === true) {\n            signOut(auth);\n        }\n    };\n\n    // - - - - -  - -  GET / CHANGE MONTH - - - -  - - - //\n    let [monthInNr, setMonthInNr] = useState(moment().format('MM-YYYY'));\n\n    // CHANGE MONTH\n    const changeMonth = (changeMonth) => {\n        if (changeMonth === 'back') {\n            let newMonth = minusMonth(monthInNr);\n            setMonthInNr(newMonth);\n        } else if (changeMonth === 'forward') {\n            let newMonth = plusMonth(monthInNr);\n            setMonthInNr(newMonth);\n        }\n    };\n\n    let minusMonth = (cMonth) => {\n        let monthDate = moment(cMonth, 'MM-YYYY')\n            .add(-1, 'month')\n            .format('MM-YYYY');\n        let monthNr = moment(monthInNr, 'MM-YYYY')\n            .add(-1, 'month')\n            .format('MM-YYYY');\n        setMonthInNr(monthNr);\n        return monthDate;\n    };\n\n    let plusMonth = (cMonth) => {\n        let monthDate = moment(cMonth, 'MM-YYYY')\n            .add(1, 'month')\n            .format('MM-YYYY');\n        let monthNr = moment(monthInNr, 'MM-YYYY')\n            .add(1, 'month')\n            .format('MM-YYYY');\n        setMonthInNr(monthNr);\n        return monthDate;\n    };\n\n    // - - - - -  - -  FETCH HOLIDAY API - - - -  - - - //\n    let [apiYear, setApiYear] = useState(monthInNr.slice(-4));\n    let [api, setApi] = useState([]);\n\n    useEffect(() => {\n        let HOLIDAY_API = '';\n        let useMonth;\n\n        useMonth = monthInNr.slice(0, 2);\n        setApiYear(monthInNr.slice(-4));\n        HOLIDAY_API +=\n            'https://sholiday.faboul.se/dagar/v2.1/' + apiYear + '/' + useMonth;\n        fetch(HOLIDAY_API)\n            .then((resp) => resp.json())\n            .then((data) => {\n                setApi(data.dagar);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, [monthInNr]);\n\n    // - - - - -  - -  GET / CHANGE DAYS - - - -  - - - //\n    let [days, setDays] = useState([]);\n    let [emptyDays, setEmptyDays] = useState(moment());\n\n    // GET DAYS BY MONTH\n    const getDaysArrayByMonth = () => {\n        const currentMonthDates = Array.from(\n            { length: moment(monthInNr, 'MM').daysInMonth() },\n            (x, i) =>\n                moment(monthInNr, 'MM')\n                    .startOf('month')\n                    .add(i, 'days')\n                    .format('DD')\n        );\n        setDays(currentMonthDates);\n    };\n\n    // GET WHICH DAY THE MONTH BEGINS\n    const getEmptyDays = () => {\n        let firstDay = moment(monthInNr, 'MM-YYYY')\n            .startOf('month')\n            .add(-1, 'days')\n            .format('d');\n        setEmptyDays(firstDay);\n    };\n\n    // UPDATE IF MONTH CHANGES\n    useEffect(() => {\n        getDaysArrayByMonth();\n        getEmptyDays();\n    }, [monthInNr]);\n\n    // - - - - -  - -  CHOOSED DAY - - - -  - - - //\n    let [clickedDay, setClickedDay] = useState(moment().format('DD-MM-YYYY'));\n    let [newTodoDay, setNewTodoDay] = useState(moment().format('DD-MM-YYYY'));\n\n    // SET CLICKED DAY\n    const choosedDay = (answer) => {\n        setNewTodoDay(answer.id);\n        setClickedDay(answer.id);\n    };\n\n    // - - - - -  - -  WEEK LAYOUT - - - -  - - - //\n    let [weekLayout, setWeekLayout] = useState(false);\n    let [week, setWeek] = useState(moment().format('W YYYY'));\n    let [weekDates, setWeekDates] = useState();\n\n    useEffect(() => {\n        let startOfWeek = moment(week, 'W YYYY').startOf('isoWeek');\n        let endOfWeek = moment(week, 'W YYYY').endOf('isoWeek');\n\n        let dayss = [];\n        let day = startOfWeek;\n        while (day <= endOfWeek) {\n            dayss.push(moment(day).format('DD'));\n            day = day.clone().add(1, 'd');\n        }\n        setWeekDates(dayss);\n    }, [week]);\n\n    const weekLayoutHandler = (change) => {\n        if (weekLayout) {\n            setWeekLayout(!weekLayout);\n        } else {\n            setWeekLayout(!weekLayout);\n        }\n    };\n\n    // CHANGE MONTH\n    const changeWeek = (changeWeek) => {\n        if (changeWeek === 'back') {\n            let newWeek = minusWeek(week);\n            setWeek(newWeek);\n        } else if (changeWeek === 'forward') {\n            let newWeek = plusWeek(week);\n            setWeek(newWeek);\n        }\n    };\n\n    let minusWeek = (cWeek) => {\n        let newWeek = moment(cWeek, 'W').add(-1, 'week').format('W YYYY');\n        setWeek(newWeek);\n        return newWeek;\n    };\n\n    let plusWeek = (cWeek) => {\n        let newWeek = moment(cWeek, 'W').add(1, 'week').format('W YYYY');\n        setWeek(newWeek);\n        return newWeek;\n    };\n\n    // - - - - -  - -  TODOS - - - -  - - - //\n    let [todos, setTodos] = useState();\n\n    // POST NEW TODO TO DB\n    const sendTodo = (todo) => {\n        let saveTodo = {\n            userId: user.id,\n            text: todo.text,\n            time: todo.time,\n            timeTo: todo.timeTo,\n            date: newTodoDay,\n            done: false,\n        };\n\n        fetch('https://calendar-backend-mathildap.herokuapp.com/new', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(saveTodo),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => setTodos(jsonRes));\n    };\n\n    // GET TODOS FROM DB\n    useEffect(() => {\n        getUsersTodos();\n    }, [user]);\n\n    async function getUsersTodos() {\n        let userId = user.id;\n\n        try {\n            const res = await fetch(\n                'https://calendar-backend-mathildap.herokuapp.com/get',\n                {\n                    method: 'post',\n                    headers: { 'Content-type': 'application/json' },\n                    body: JSON.stringify({ userId }),\n                }\n            ).then((resp) => resp.json());\n            setTodos(res);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    // DELETE TODO\n    const deleteTask = (id) => {\n        let todoId = { id: id, userId: user.id };\n        fetch('https://calendar-backend-mathildap.herokuapp.com/delete', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(todoId),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                setTodos(jsonRes);\n            });\n    };\n\n    // TOGGLE DONE\n    const toggleReminder = (id) => {\n        let trueOrFalse;\n\n        if (id.done === true) {\n            trueOrFalse = false;\n        } else {\n            trueOrFalse = true;\n        }\n\n        let todoId = { id: id.id, done: trueOrFalse, userId: user.id };\n\n        fetch('https://calendar-backend-mathildap.herokuapp.com/update', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(todoId),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                setTodos(jsonRes);\n            });\n    };\n\n    // EDIT TODO\n    let [todoEdit, setTodoEdit] = useState('');\n\n    const editTodo = (todo) => {\n        setTodoEdit(todo);\n    };\n\n    const updatedTodo = (info) => {\n        console.log(info);\n\n        fetch('https://calendar-backend-mathildap.herokuapp.com/edit', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(info),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                setTodos(jsonRes);\n                setTodoEdit('');\n            });\n    };\n\n    // - - - - -  - -  NOTES - - - -  - - - //\n    let [notes, setNotes] = useState();\n\n    // NEW NOTE\n    const newNote = (note) => {\n        let saveNote = {\n            userId: user.id,\n            note: note,\n            done: false,\n        };\n\n        fetch(\n            'https://calendar-backend-mathildap.herokuapp.com/notes/newNote',\n            {\n                method: 'post',\n                headers: { 'Content-type': 'application/json' },\n                body: JSON.stringify(saveNote),\n            }\n        )\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                setNotes(jsonRes);\n            });\n    };\n\n    // GET NOTES FROM DB\n    useEffect(() => {\n        let userId = user.id;\n\n        fetch('https://calendar-backend-mathildap.herokuapp.com/notes/get', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({ userId }),\n        })\n            .then((res) => res.json())\n            .then((jsonRes) => setNotes(jsonRes));\n    }, [user]);\n\n    // DELETE NOTE\n    const deleteNote = (id) => {\n        let noteId = { id: id, userId: user.id };\n\n        fetch('https://calendar-backend-mathildap.herokuapp.com/notes/delete', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(noteId),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                setNotes(jsonRes);\n            });\n    };\n\n    // DISPLAY INFO\n    let [showInfo, setShowInfo] = useState(false);\n\n    return (\n        <main>\n            {user === '' ? (\n                <Login\n                    userInfo={userInfo}\n                    newUserInfo={newUserInfo}\n                    googleLogin={googleLogin}\n                    errorMsg={errorMsg}\n                    emailExist={emailExist}\n                />\n            ) : (\n                <>\n                    {weekLayout ? (\n                        <WeekHeader\n                            changeWeek={changeWeek}\n                            week={week}\n                            weekLayoutHandler={weekLayoutHandler}\n                            user={user.userName}\n                            logOutHandler={logOutHandler}\n                        />\n                    ) : (\n                        <Header\n                            month={monthInNr}\n                            changeMonth={changeMonth}\n                            user={user.userName}\n                            logOutHandler={logOutHandler}\n                            weekLayoutHandler={weekLayoutHandler}\n                        />\n                    )}\n                    <section className='main-container'>\n                        {weekLayout ? (\n                            <WeekLayout\n                                weekDates={weekDates}\n                                todos={todos}\n                                monthInNr={monthInNr}\n                            />\n                        ) : (\n                            <Calendar\n                                monthInNr={monthInNr}\n                                days={days}\n                                api={api}\n                                firstDayOfMonth={emptyDays}\n                                clickedDay={choosedDay}\n                                todos={todos}\n                                onDelete={deleteTask}\n                                onToggle={toggleReminder}\n                            />\n                        )}\n                        <aside>\n                            <div className='aside-container'>\n                                <Today\n                                    clickedDay={clickedDay}\n                                    todos={todos}\n                                    onDelete={deleteTask}\n                                    onToggle={toggleReminder}\n                                    editTodo={editTodo}\n                                    openInfo={(info) => setShowInfo(!showInfo)}\n                                />\n                                <NewTodo\n                                    clickedDay={clickedDay}\n                                    inputToDo={sendTodo}\n                                />\n                            </div>\n                            <div className='aside-container'>\n                                <Notes notes={notes} onDelete={deleteNote} />\n                                <NewNote newNote={newNote} />\n                            </div>\n                            <AllTodos\n                                todos={todos}\n                                onDelete={deleteTask}\n                                onToggle={toggleReminder}\n                                editTodo={editTodo}\n                            />\n                        </aside>\n                    </section>\n                    {todoEdit === '' ? (\n                        ''\n                    ) : (\n                        <Edit\n                            todo={todoEdit}\n                            updatedTodo={updatedTodo}\n                            closeEdit={() => setTodoEdit('')}\n                        />\n                    )}\n                    {!showInfo ? (\n                        ''\n                    ) : (\n                        <Info closeEdit={() => setShowInfo(false)} />\n                    )}\n                </>\n            )}\n        </main>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}