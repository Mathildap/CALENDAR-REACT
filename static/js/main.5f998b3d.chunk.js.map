{"version":3,"sources":["components/Todo.js","components/AllTodos.js","components/Days.js","components/Loading.js","components/Calendar.js","components/Header.js","components/NewTodo.js","components/Today.js","components/Login.js","App.js","index.js"],"names":["Todo","todo","onDelete","onToggle","className","done","text","time","date","style","color","cursor","fontSize","onClick","id","_id","marginLeft","marginRight","AllTodos","todos","undefined","sort","a","b","moment","map","Days","formatDate","day","api","month","clickedDay","colorDayHandler","currentDay","format","totalTodos","apiId","onMouseDown","e","document","querySelectorAll","forEach","node","classList","remove","target","length","theDay","slice","year","mon","replace","parentNode","filter","datum","helgdag","Loading","type","height","width","updateLocale","week","dow","Calendar","days","currentDays","emptyDays","firstDayOfMonth","parseDays","parseInt","blanks","i","push","weekdayshortname","weekdaysShort","answer","useState","colorDay","setColorDay","useEffect","getElementById","add","blank","monthInNr","Header","formatMonth","user","logOutHandler","changeMonth","NewTodo","change","setChange","setTime","onSubmit","sendInfo","preventDefault","inputToDo","value","onChange","placeholder","maxLength","required","name","Today","draggable","Login","userInfo","newUserInfo","errorMsg","email","setEmail","password","setPassword","hasAccount","setHasAccount","newUserName","setNewUserName","newEmail","setNewEmail","newPassword","setNewPassword","toLowerCase","userName","passWord","App","useMonth","setUser","setErrorMsg","setMonthInNr","minusMonth","cMonth","monthDate","monthNr","plusMonth","apiYear","setApiYear","setApi","HOLIDAY_API","fetch","then","resp","json","data","dagar","setDays","setEmptyDays","currentMonthDates","Array","from","daysInMonth","x","startOf","getDaysArrayByMonth","firstDay","getEmptyDays","setClickedDay","newTodoDay","setNewTodoDay","setTodos","setSavedTodo","userId","method","headers","body","JSON","stringify","res","jsonRes","deleteTask","todoId","toggleReminder","trueOrFalse","querySelector","draggables","addEventListener","info","username","newUser","newMonth","saveTodo","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5f998b3d.chunk.js","sourcesContent":["import React from 'react';\nimport { BiCheck, BiTrash } from 'react-icons/bi';\n\nfunction Todo({ todo, onDelete, onToggle }) {\n    return (\n        <div className='todo'>\n            <div className={`${todo.done === true ? 'reminder' : ''}`}>\n                <span className='todo-text'>{todo.text}</span>\n                <span className='todo-time_date'>{todo.time}</span>\n                <span className='todo-time_date'>{todo.date}</span>\n                <div>\n                    <BiCheck\n                        style={{\n                            color: '#777777',\n                            cursor: 'pointer',\n                            fontSize: '1.1rem',\n                        }}\n                        onClick={() =>\n                            onToggle({\n                                id: todo._id,\n                                done: todo.done,\n                            })\n                        }\n                    />\n                    <BiTrash\n                        style={{\n                            color: '#777777',\n                            cursor: 'pointer',\n                            marginLeft: '1px',\n                            marginRight: '-5px',\n                        }}\n                        onClick={() => onDelete(todo._id)}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Todo;\n","import moment from 'moment';\nimport React from 'react';\nimport Todo from './Todo';\n\nfunction AllTodos({ todos, onDelete, onToggle }) {\n    if (todos === undefined) {\n        return (\n            <div className='aside-container alltodos-container loading'>\n                Loading...\n            </div>\n        );\n    } else {\n        return (\n            <div className='aside-container alltodos-container'>\n                <h1>All Todos</h1>\n                {todos\n                    .sort((a, b) =>\n                        moment(b.date, 'DD-MM-YYYY') <\n                        moment(a.date, 'DD-MM-YYYY')\n                            ? 1\n                            : -1\n                    )\n                    .map((todo) => (\n                        <Todo\n                            key={todo._id}\n                            todo={todo}\n                            onDelete={onDelete}\n                            onToggle={onToggle}\n                        />\n                    ))}\n            </div>\n        );\n    }\n}\n\nexport default AllTodos;\n","import moment from 'moment';\nimport React from 'react';\n\nfunction Days({ day, api, month, clickedDay, colorDayHandler, todos }) {\n    let formatDate;\n    let currentDay = moment().format('DD-MM-YYYY');\n    if (day === '31') {\n        formatDate = 31;\n    } else {\n        formatDate = moment(day, 'DD-MM-YYYY').format('D');\n    }\n\n    const clickedDayy = (e) => {\n        if (e.target.id.length === 10) {\n            let id = e.target.id;\n            let date = id.slice(-2);\n            let year = id.slice(-7, -2);\n            let mon = id.replace(/ .*/, '');\n            let theDay = { date: date, year: year, mon: mon, id: e.target.id };\n            clickedDay(theDay);\n            colorDayHandler(id);\n        } else {\n            let id = e.target.parentNode.id;\n            let date = id.slice(-2);\n            let year = id.slice(-7, -2);\n            let mon = id.replace(/ .*/, '');\n            let theDay = {\n                date: date,\n                year: year,\n                mon: mon,\n                id: e.target.parentNode.id,\n            };\n            clickedDay(theDay);\n            colorDayHandler(id);\n        }\n    };\n\n    const onMouseDown = (e) => {\n        document.querySelectorAll('*').forEach(function (node) {\n            node.classList.remove('clickedday');\n        });\n    };\n\n    if (todos === undefined) {\n        return <div></div>;\n    } else {\n        let id = day + '-' + month;\n        let totalTodos = 0;\n        let apiId = moment(id, 'DD-MM-YYYY').format('YYYY-MM-DD');\n\n        return (\n            <div\n                onMouseDown={onMouseDown}\n                onClick={clickedDayy}\n                id={id}\n                className={`${\n                    id === currentDay\n                        ? 'days-day_cont currentday'\n                        : 'days-day_cont'\n                }`}\n            >\n                <h3>\n                    {formatDate}\n                    {api\n                        .filter((a) => a.datum === apiId)\n                        .map((a) => {\n                            return (\n                                <span className='days-api' key={a.datum}>\n                                    {a.helgdag}\n                                </span>\n                            );\n                        })}\n                </h3>\n                {todos\n                    .sort((a, b) => (b.time < a.time ? 1 : -1))\n                    .filter((todo) => todo.date === id)\n                    .map((todo) => {\n                        totalTodos++;\n                        return (\n                            <div className='inline day-todo' key={todo._id}>\n                                ・{todo.text}\n                            </div>\n                        );\n                    })}\n                <div className='days-todo_count'>\n                    {totalTodos === 0 ? '' : totalTodos + ' Todo:'}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Days;\n","import React from 'react';\nimport ReactLoading from 'react-loading';\n\nfunction Loading() {\n    return (\n        <ReactLoading\n            type='spin'\n            color='rgb(241, 136, 139)'\n            height={'15%'}\n            width={'15%'}\n            className='loading'\n        />\n    );\n}\n\nexport default Loading;\n","import moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport Days from './Days';\nimport Loading from './Loading';\n\nmoment.updateLocale('sv', {\n    week: {\n        dow: 1,\n    },\n});\n\nfunction Calendar(days) {\n    let currentDays = days.days;\n\n    let emptyDays = days.firstDayOfMonth;\n    let parseDays = parseInt(emptyDays, 10);\n    let blanks = [];\n    for (let i = 0; i < parseDays; i++) {\n        blanks.push(i);\n    }\n\n    let weekdayshort = moment.weekdaysShort(true);\n    const weekdayshortname = weekdayshort.map((day) => {\n        return (\n            <div className='weekdays-day_cont' key={day}>\n                {day}\n            </div>\n        );\n    });\n\n    const clickedDay = (answer) => {\n        days.clickedDay(answer);\n    };\n\n    let [colorDay, setColorDay] = useState('');\n    const colorDayHandler = (id) => {\n        setColorDay(id);\n    };\n\n    useEffect(() => {\n        if (colorDay === '') {\n            return;\n        } else {\n            let elem = document.getElementById(colorDay);\n            elem.classList.add('clickedday');\n        }\n    }, [colorDay]);\n\n    return (\n        <section className='calendar-container'>\n            <div className='weekdays-container'>{weekdayshortname}</div>\n            <div className='days-container'>\n                {blanks.map((blank, i) => (\n                    <div key={i} className='days-day_cont empty'></div>\n                ))}\n                {currentDays !== undefined ? (\n                    currentDays.map((day) => (\n                        <Days\n                            key={days.monthInNr + day}\n                            month={days.monthInNr}\n                            day={day}\n                            api={days.api}\n                            clickedDay={clickedDay}\n                            colorDayHandler={colorDayHandler}\n                            todos={days.todos}\n                        />\n                    ))\n                ) : (\n                    <Loading />\n                )}\n            </div>\n        </section>\n    );\n}\n\nexport default Calendar;\n","import moment from 'moment';\nimport React from 'react';\nimport { BiChevronLeft, BiChevronRight } from 'react-icons/bi';\n\nfunction Header(month) {\n    let formatMonth = moment(month.month, 'MM-YYYY').format('MMMM YYYY');\n\n    const back = () => {\n        month.changeMonth('back');\n    };\n\n    const forward = () => {\n        month.changeMonth('forward');\n    };\n\n    return (\n        <header>\n            <div className='header-name_btn'>\n                <div className='header-username'>{month.user}</div>\n                <button onClick={month.logOutHandler} className='logOutBtn'>\n                    Sign out\n                </button>\n            </div>\n            <div className='header'>\n                <BiChevronLeft\n                    type='submit'\n                    onClick={back}\n                    className='header-arrow'\n                />\n                <h1>{formatMonth}</h1>\n                <BiChevronRight\n                    type='submit'\n                    onClick={forward}\n                    className='header-arrow'\n                />\n            </div>\n        </header>\n    );\n}\n\nexport default Header;\n","import React, { useState } from 'react';\n\nfunction NewTodo(day) {\n    let [change, setChange] = useState('');\n    let [time, setTime] = useState('');\n\n    const onChange = (e) => {\n        setChange(e.target.value);\n    };\n\n    const timeHandler = (e) => {\n        setTime(e.target.value);\n    };\n\n    const onSubmit = (e) => {\n        let sendInfo = { text: change, time: time };\n\n        e.preventDefault();\n        day.inputToDo(sendInfo);\n        setChange('');\n        setTime();\n        document.getElementById('appt').value = '';\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <input\n                    onChange={onChange}\n                    type='text'\n                    value={change}\n                    placeholder='New Todo'\n                    id='newTodoInput'\n                    maxLength='20'\n                    required\n                />\n                <input\n                    type='time'\n                    id='appt'\n                    name='appt'\n                    onChange={timeHandler}\n                />\n                <button type='submit' id='newTodoBtn'>\n                    +\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewTodo;\n","import moment from 'moment';\nimport React from 'react';\nimport { BiCheck, BiTrash } from 'react-icons/bi';\n\nfunction Today({ clickedDay, todos, onDelete, onToggle }) {\n    let formatDate = moment(clickedDay, 'DD-MM-YYYY').format('D MMMM YY');\n\n    if (todos === undefined) {\n        return <div className='aside-container loading'>Loading...</div>;\n    } else {\n        return (\n            <article className='today-todo_container'>\n                <h1>{formatDate}</h1>\n                {todos\n                    .sort((a, b) => (b.time < a.time ? 1 : -1))\n                    .filter((todo) => todo.date === clickedDay)\n                    .map((todo) => (\n                        <div\n                            className='draggables todo'\n                            key={todo._id}\n                            draggable='true'\n                        >\n                            <div\n                                className={`${\n                                    todo.done === true ? 'reminder' : ''\n                                }`}\n                            >\n                                {todo.text}\n                                {'  '}\n                                <span className='todo-time_date'>\n                                    {todo.time}\n                                </span>\n                                <span className='todo-time_date'>\n                                    {todo.date}\n                                </span>\n                                <div>\n                                    <BiCheck\n                                        style={{\n                                            color: '#777777',\n                                            cursor: 'pointer',\n                                            fontSize: '1.1rem',\n                                        }}\n                                        onClick={() =>\n                                            onToggle({\n                                                id: todo._id,\n                                                done: todo.done,\n                                            })\n                                        }\n                                    />\n                                    <BiTrash\n                                        style={{\n                                            color: '#777777',\n                                            cursor: 'pointer',\n                                            marginLeft: '1px',\n                                            marginRight: '-5px',\n                                        }}\n                                        onClick={() => onDelete(todo._id)}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n            </article>\n        );\n    }\n}\n\nexport default Today;\n","import React, { useState } from 'react';\n\nfunction Login({ userInfo, newUserInfo, errorMsg }) {\n    let [email, setEmail] = useState('');\n    let [password, setPassword] = useState('');\n    let [hasAccount, setHasAccount] = useState(true);\n\n    let [newUserName, setNewUserName] = useState('');\n    let [newEmail, setNewEmail] = useState('');\n    let [newPassword, setNewPassword] = useState('');\n\n    const emailHandler = (e) => {\n        setEmail(e.target.value.toLowerCase());\n    };\n\n    const pWordHandler = (e) => {\n        setPassword(e.target.value);\n    };\n\n    const newUserHandler = (e) => {\n        e.preventDefault();\n\n        let newUser = {\n            userName: newUserName,\n            email: newEmail,\n            passWord: newPassword,\n        };\n\n        newUserInfo(newUser);\n    };\n\n    const sendUserInfo = (e) => {\n        e.preventDefault();\n        let info = { email, password };\n        userInfo(info);\n    };\n\n    return (\n        <>\n            {hasAccount ? (\n                <div className='login-page'>\n                    <div id='logInContainer'>\n                        <div id='logInInputs'>\n                            <form onSubmit={sendUserInfo}>\n                                <input\n                                    type='email'\n                                    placeholder='EMAIL'\n                                    id='userName'\n                                    className='logInField'\n                                    onChange={emailHandler}\n                                    value={email}\n                                    required\n                                />\n                                <input\n                                    type='password'\n                                    placeholder='PASSWORD'\n                                    id='passWord'\n                                    className='logInField'\n                                    onChange={pWordHandler}\n                                    value={password}\n                                    required\n                                />\n                                {errorMsg ? (\n                                    <p id='errorMsg'>Sorry, invalid login!</p>\n                                ) : (\n                                    ''\n                                )}\n                                <button id='logInBtn'>Sign in</button>\n                                <p\n                                    onClick={() => setHasAccount(!hasAccount)}\n                                    id='signUp'\n                                >\n                                    Create account\n                                </p>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className='login-page'>\n                    <div id='newLogInContainer'>\n                        <div id='logInInputs'>\n                            <form onSubmit={newUserHandler}>\n                                <input\n                                    type='text'\n                                    placeholder='CHOOSE NAME'\n                                    id='newUserName'\n                                    className='logInField'\n                                    required='required'\n                                    onChange={(e) =>\n                                        setNewUserName(e.target.value)\n                                    }\n                                    value={newUserName}\n                                />\n                                <input\n                                    type='email'\n                                    placeholder='CHOOSE EMAIL'\n                                    id='newEmail'\n                                    className='logInField'\n                                    required='required'\n                                    onChange={(e) =>\n                                        setNewEmail(\n                                            e.target.value.toLowerCase()\n                                        )\n                                    }\n                                    value={newEmail}\n                                />\n                                <input\n                                    type='password'\n                                    placeholder=' CHOOSE PASSWORD'\n                                    id='newPassWord'\n                                    className='logInField'\n                                    required='required'\n                                    onChange={(e) =>\n                                        setNewPassword(e.target.value)\n                                    }\n                                    value={newPassword}\n                                />\n                                <p id='newErrorMsg'></p>\n                                <button id='createAccount'>\n                                    Create account\n                                </button>\n                                <p\n                                    onClick={() => setHasAccount(!hasAccount)}\n                                    id='signUp'\n                                >\n                                    Have an account? Sign in\n                                </p>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default Login;\n","import moment from 'moment';\nimport { useState, useEffect } from 'react';\nimport './css/style.css';\nimport AllTodos from './components/AllTodos';\nimport Calendar from './components/Calendar';\nimport Header from './components/Header';\nimport NewTodo from './components/NewTodo';\nimport Today from './components/Today';\nimport Login from './components/Login';\n\nmoment.updateLocale('sv', {\n    week: {\n        dow: 1,\n    },\n});\n\nfunction App() {\n    // - - - - -  - -  LOGIN / USER - - - -  - - - //\n    let [user, setUser] = useState('');\n    let [errorMsg, setErrorMsg] = useState();\n\n    // USER\n    const userInfo = (info) => {\n        fetch('https://calendar-backend-mathildap.herokuapp.com/users', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({ info }),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                if (jsonRes === 'error') {\n                    setErrorMsg('error');\n                    return;\n                }\n                setUser({ userName: jsonRes.username, id: jsonRes.id });\n            });\n    };\n\n    // NEW USER\n    const newUserInfo = (newUser) => {\n        fetch('https://calendar-backend-mathildap.herokuapp.com/users/new', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({ newUser }),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                setUser({ userName: jsonRes.username, id: jsonRes.id });\n            });\n    };\n\n    // - - - - -  - -  GET / CHANGE MONTH - - - -  - - - //\n    let [monthInNr, setMonthInNr] = useState(moment().format('MM-YYYY'));\n\n    // CHANGE MONTH\n    const changeMonth = (changeMonth) => {\n        if (changeMonth === 'back') {\n            let newMonth = minusMonth(monthInNr);\n            setMonthInNr(newMonth);\n        } else if (changeMonth === 'forward') {\n            let newMonth = plusMonth(monthInNr);\n            setMonthInNr(newMonth);\n        }\n    };\n\n    let minusMonth = (cMonth) => {\n        let monthDate = moment(cMonth, 'MM-YYYY')\n            .add(-1, 'month')\n            .format('MM-YYYY');\n        let monthNr = moment(monthInNr, 'MM-YYYY')\n            .add(-1, 'month')\n            .format('MM-YYYY');\n        setMonthInNr(monthNr);\n        return monthDate;\n    };\n\n    let plusMonth = (cMonth) => {\n        let monthDate = moment(cMonth, 'MM-YYYY')\n            .add(1, 'month')\n            .format('MM-YYYY');\n        let monthNr = moment(monthInNr, 'MM-YYYY')\n            .add(1, 'month')\n            .format('MM-YYYY');\n        setMonthInNr(monthNr);\n        return monthDate;\n    };\n\n    // - - - - -  - -  FETCH HOLIDAY API - - - -  - - - //\n    let [apiYear, setApiYear] = useState(monthInNr.slice(-4));\n    let [api, setApi] = useState([]);\n    let HOLIDAY_API = '';\n    let useMonth;\n\n    useEffect(() => {\n        useMonth = monthInNr.slice(0, 2);\n        setApiYear(monthInNr.slice(-4));\n        HOLIDAY_API +=\n            'https://sholiday.faboul.se/dagar/v2.1/' + apiYear + '/' + useMonth;\n        fetch(HOLIDAY_API)\n            .then((resp) => resp.json())\n            .then((data) => {\n                setApi(data.dagar);\n            });\n    }, [monthInNr]);\n\n    // - - - - -  - -  GET / CHANGE DAYS - - - -  - - - //\n    let [days, setDays] = useState([]);\n    let [emptyDays, setEmptyDays] = useState(moment());\n\n    // GET DAYS BY MONTH\n    const getDaysArrayByMonth = () => {\n        const currentMonthDates = Array.from(\n            { length: moment(monthInNr, 'MM').daysInMonth() },\n            (x, i) =>\n                moment(monthInNr, 'MM')\n                    .startOf('month')\n                    .add(i, 'days')\n                    .format('DD')\n        );\n        setDays(currentMonthDates);\n    };\n\n    // GET WHICH DAY THE MONTH BEGINS\n    const getEmptyDays = () => {\n        let firstDay = moment(monthInNr, 'MM')\n            .startOf('month')\n            .add(-1, 'days')\n            .format('d');\n        setEmptyDays(firstDay);\n    };\n\n    // UPDATE IF MONTH CHANGES\n    useEffect(() => {\n        getDaysArrayByMonth();\n        getEmptyDays();\n        // eslint-disabke.next-line react-hooks/exhaustive-deps\n    }, [monthInNr]);\n\n    // - - - - -  - -  CHOOSED DAY - - - -  - - - //\n    let [clickedDay, setClickedDay] = useState(moment().format('DD-MM-YYYY'));\n    let [newTodoDay, setNewTodoDay] = useState(moment().format('DD-MM-YYYY'));\n\n    // SET CLICKED DAY\n    const choosedDay = (answer) => {\n        setNewTodoDay(answer.id);\n        setClickedDay(answer.id);\n    };\n\n    // - - - - -  - -  TODOS - - - -  - - - //\n    let [todos, setTodos] = useState();\n    let [savedTodo, setSavedTodo] = useState();\n\n    // POST NEW TODO TO DB\n    const sendTodo = (todo) => {\n        let saveTodo = {\n            userId: user.id,\n            text: todo.text,\n            time: todo.time,\n            date: newTodoDay,\n            done: false,\n        };\n\n        setSavedTodo(saveTodo);\n\n        fetch('https://calendar-backend-mathildap.herokuapp.com/new', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(saveTodo),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => setTodos(jsonRes));\n    };\n\n    // GET TODOS FROM DB\n    useEffect(() => {\n        let userId = user.id;\n\n        fetch('https://calendar-backend-mathildap.herokuapp.com/get', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({ userId }),\n        })\n            .then((res) => res.json())\n            .then((jsonRes) => setTodos(jsonRes));\n    }, [user]);\n\n    // DELETE TODO\n    const deleteTask = (id) => {\n        let todoId = { id: id, userId: user.id };\n        fetch('https://calendar-backend-mathildap.herokuapp.com/delete', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(todoId),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                setTodos(jsonRes);\n            });\n    };\n\n    // TOGGLE DONE\n    const toggleReminder = (id) => {\n        let trueOrFalse;\n\n        if (id.done === true) {\n            trueOrFalse = false;\n        } else {\n            trueOrFalse = true;\n        }\n\n        let todoId = { id: id.id, done: trueOrFalse, userId: user.id };\n\n        fetch('https://calendar-backend-mathildap.herokuapp.com/update', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(todoId),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                setTodos(jsonRes);\n            });\n    };\n\n    if (!todos === '') {\n        let draggables = document.querySelector('.draggables');\n\n        draggables.forEach((draggables) => {\n            draggables.addEventListener('dragstart', () => {\n                draggables.classList.add('dragging');\n            });\n        });\n    }\n\n    return (\n        <main>\n            {user === '' ? (\n                <Login\n                    userInfo={userInfo}\n                    newUserInfo={newUserInfo}\n                    errorMsg={errorMsg}\n                />\n            ) : (\n                <>\n                    <Header\n                        month={monthInNr}\n                        changeMonth={changeMonth}\n                        user={user.userName}\n                        logOutHandler={() => {\n                            setUser('');\n                        }}\n                    />\n                    <section className='main-container'>\n                        <Calendar\n                            monthInNr={monthInNr}\n                            days={days}\n                            api={api}\n                            firstDayOfMonth={emptyDays}\n                            clickedDay={choosedDay}\n                            todos={todos}\n                            onDelete={deleteTask}\n                            onToggle={toggleReminder}\n                        />\n                        <aside>\n                            <div className='aside-container'>\n                                <Today\n                                    clickedDay={clickedDay}\n                                    todos={todos}\n                                    onDelete={deleteTask}\n                                    onToggle={toggleReminder}\n                                />\n                                <NewTodo\n                                    clickedDay={clickedDay}\n                                    inputToDo={sendTodo}\n                                />\n                            </div>\n                            <AllTodos\n                                todos={todos}\n                                onDelete={deleteTask}\n                                onToggle={toggleReminder}\n                            />\n                        </aside>\n                    </section>\n                </>\n            )}\n        </main>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}