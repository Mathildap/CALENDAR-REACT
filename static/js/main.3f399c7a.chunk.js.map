{"version":3,"sources":["components/Todo.js","components/AllTodos.js","components/Days.js","components/Loading.js","components/Calendar.js","components/Header.js","components/NewTodo.js","components/Today.js","Firebase/firebase.js","components/Login.js","components/Notes.js","components/NewNote.js","components/Edit.js","App.js","index.js"],"names":["Todo","todo","onDelete","onToggle","editTodo","className","done","onClick","text","time","date","style","color","cursor","fontSize","id","_id","marginLeft","marginRight","AllTodos","todos","undefined","sort","a","b","moment","filter","map","Days","formatDate","day","api","month","clickedDay","colorDayHandler","currentDay","format","totalTodos","apiId","onMouseDown","e","document","querySelectorAll","forEach","node","classList","remove","target","length","theDay","slice","year","mon","replace","parentNode","datum","helgdag","Loading","type","height","width","updateLocale","week","dow","Calendar","days","currentDays","emptyDays","firstDayOfMonth","parseDays","parseInt","blanks","i","push","weekdayshortname","weekdaysShort","answer","useState","colorDay","setColorDay","useEffect","getElementById","add","blank","monthInNr","Header","formatMonth","firstName","user","split","logOutHandler","changeMonth","NewTodo","change","setChange","setTime","onSubmit","sendInfo","preventDefault","inputToDo","value","onChange","placeholder","maxLength","required","name","Today","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","Login","userInfo","newUserInfo","errorMsg","emailExist","googleLogin","email","setEmail","password","setPassword","hasAccount","setHasAccount","newUserName","setNewUserName","newEmail","setNewEmail","newPassword","setNewPassword","provider","GoogleAuthProvider","signInWithPopup","res","googleUserInfo","userName","displayName","console","log","toLowerCase","pwType","src","alt","passWord","pw","Notes","notes","note","NewNote","newNote","Edit","updatedTodo","closeEdit","theTodo","setTheTodo","editRef","useRef","handler","event","current","contains","addEventListener","removeEventListener","prevState","ref","App","setUser","setErrorMsg","setEmailExist","setMonthInNr","minusMonth","cMonth","monthDate","monthNr","plusMonth","apiYear","setApiYear","setApi","useMonth","HOLIDAY_API","fetch","then","resp","json","data","dagar","catch","error","setDays","setEmptyDays","currentMonthDates","Array","from","daysInMonth","x","startOf","getDaysArrayByMonth","firstDay","getEmptyDays","setClickedDay","newTodoDay","setNewTodoDay","setTodos","userId","method","headers","body","JSON","stringify","getUsersTodos","deleteTask","todoId","jsonRes","toggleReminder","trueOrFalse","todoEdit","setTodoEdit","setNotes","info","username","newUser","googleUser","err","newMonth","signOut","saveTodo","noteId","saveNote","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3f399c7a.chunk.js","sourcesContent":["import React from 'react';\nimport { BiCheck, BiTrash } from 'react-icons/bi';\n\nfunction Todo({ todo, onDelete, onToggle, editTodo }) {\n    return (\n        <div className='todo'>\n            <div className={`${todo.done === true ? 'reminder' : ''}`}>\n                <div\n                    className='todo-click-box'\n                    onClick={() => {\n                        editTodo(todo);\n                    }}\n                >\n                    <span className='todo-text'>{todo.text}</span>\n                    <span className='todo-time_date'>{todo.time}</span>\n                    <span className='todo-time_date'>{todo.date}</span>\n                </div>\n                <div>\n                    <BiCheck\n                        style={{\n                            color: '#777777',\n                            cursor: 'pointer',\n                            fontSize: '1.1rem',\n                        }}\n                        onClick={() =>\n                            onToggle({\n                                id: todo._id,\n                                done: todo.done,\n                            })\n                        }\n                    />\n                    <BiTrash\n                        style={{\n                            color: '#777777',\n                            cursor: 'pointer',\n                            marginLeft: '1px',\n                            marginRight: '-5px',\n                        }}\n                        onClick={() => onDelete(todo._id)}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Todo;\n","import moment from 'moment';\nimport React from 'react';\nimport Todo from './Todo';\n\nfunction AllTodos({ todos, onDelete, onToggle, editTodo }) {\n    if (todos === undefined) {\n        return (\n            <div className='aside-container alltodos-container loading'>\n                Loading...\n            </div>\n        );\n    } else {\n        return (\n            <div className='aside-container alltodos-container'>\n                <h1>All Todos</h1>\n                {todos\n                    .sort((a, b) =>\n                        moment(b.date, 'DD-MM-YYYY') <\n                        moment(a.date, 'DD-MM-YYYY')\n                            ? 1\n                            : -1\n                    )\n                    .filter((todo) => todo.done === false)\n                    .map((todo) => (\n                        <Todo\n                            key={todo._id}\n                            todo={todo}\n                            onDelete={onDelete}\n                            onToggle={onToggle}\n                            editTodo={editTodo}\n                        />\n                    ))}\n            </div>\n        );\n    }\n}\n\nexport default AllTodos;\n","import moment from 'moment';\nimport React from 'react';\n\nfunction Days({ day, api, month, clickedDay, colorDayHandler, todos }) {\n    let formatDate;\n    let currentDay = moment().format('DD-MM-YYYY');\n    if (day === '31') {\n        formatDate = 31;\n    } else {\n        formatDate = moment(day, 'DD-MM-YYYY').format('D');\n    }\n\n    const clickedDayy = (e) => {\n        if (e.target.id.length === 10) {\n            let id = e.target.id;\n            let date = id.slice(-2);\n            let year = id.slice(-7, -2);\n            let mon = id.replace(/ .*/, '');\n            let theDay = { date: date, year: year, mon: mon, id: e.target.id };\n            clickedDay(theDay);\n            colorDayHandler(id);\n        } else {\n            let id = e.target.parentNode.id;\n            let date = id.slice(-2);\n            let year = id.slice(-7, -2);\n            let mon = id.replace(/ .*/, '');\n            let theDay = {\n                date: date,\n                year: year,\n                mon: mon,\n                id: e.target.parentNode.id,\n            };\n            clickedDay(theDay);\n            colorDayHandler(id);\n        }\n    };\n\n    const onMouseDown = (e) => {\n        document.querySelectorAll('*').forEach(function (node) {\n            node.classList.remove('clickedday');\n        });\n    };\n\n    if (todos === undefined) {\n        return <div></div>;\n    } else {\n        let id = day + '-' + month;\n        let totalTodos = 0;\n        let apiId = moment(id, 'DD-MM-YYYY').format('YYYY-MM-DD');\n\n        return (\n            <div\n                onMouseDown={onMouseDown}\n                onClick={clickedDayy}\n                id={id}\n                className={`${\n                    id === currentDay\n                        ? 'days-day_cont currentday'\n                        : 'days-day_cont'\n                }`}\n            >\n                <h3>\n                    {formatDate}\n                    {api\n                        .filter((a) => a.datum === apiId)\n                        .map((a) => {\n                            return (\n                                <span className='days-api' key={a.datum}>\n                                    {a.helgdag}\n                                </span>\n                            );\n                        })}\n                </h3>\n                {todos\n                    .sort((a, b) => (b.time < a.time ? 1 : -1))\n                    .filter((todo) => todo.date === id)\n                    .map((todo) => {\n                        totalTodos++;\n                        return (\n                            <div className='inline day-todo' key={todo._id}>\n                                <span className='dot'>・</span>\n                                {todo.text}\n                            </div>\n                        );\n                    })}\n                <div className='days-todo_count'>\n                    {totalTodos === 0 ? '' : totalTodos + ' Todo:'}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Days;\n","import React from 'react';\nimport ReactLoading from 'react-loading';\n\nfunction Loading() {\n    return (\n        <ReactLoading\n            type='spin'\n            color='rgb(241, 136, 139)'\n            height={'15%'}\n            width={'15%'}\n            className='loading'\n        />\n    );\n}\n\nexport default Loading;\n","import moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport Days from './Days';\nimport Loading from './Loading';\n\nmoment.updateLocale('sv', {\n    week: {\n        dow: 1,\n    },\n});\n\nfunction Calendar(days) {\n    let currentDays = days.days;\n\n    let emptyDays = days.firstDayOfMonth;\n    let parseDays = parseInt(emptyDays, 10);\n    let blanks = [];\n    for (let i = 0; i < parseDays; i++) {\n        blanks.push(i);\n    }\n\n    let weekdayshort = moment.weekdaysShort(true);\n    const weekdayshortname = weekdayshort.map((day) => {\n        return (\n            <div className='weekdays-day_cont' key={day}>\n                {day}\n            </div>\n        );\n    });\n\n    const clickedDay = (answer) => {\n        days.clickedDay(answer);\n    };\n\n    let [colorDay, setColorDay] = useState('');\n    const colorDayHandler = (id) => {\n        setColorDay(id);\n    };\n\n    useEffect(() => {\n        if (colorDay === '') {\n            return;\n        } else {\n            let elem = document.getElementById(colorDay);\n            elem.classList.add('clickedday');\n        }\n    }, [colorDay]);\n\n    return (\n        <section className='calendar-container'>\n            <div className='weekdays-container'>{weekdayshortname}</div>\n            <div className='days-container'>\n                {blanks.map((blank, i) => (\n                    <div key={i} className='days-day_cont empty'></div>\n                ))}\n                {currentDays !== undefined ? (\n                    currentDays.map((day) => (\n                        <Days\n                            key={days.monthInNr + day}\n                            month={days.monthInNr}\n                            day={day}\n                            api={days.api}\n                            clickedDay={clickedDay}\n                            colorDayHandler={colorDayHandler}\n                            todos={days.todos}\n                        />\n                    ))\n                ) : (\n                    <Loading />\n                )}\n            </div>\n        </section>\n    );\n}\n\nexport default Calendar;\n","import moment from 'moment';\nimport React from 'react';\nimport { BiChevronLeft, BiChevronRight } from 'react-icons/bi';\n\nfunction Header(month) {\n    let formatMonth = moment(month.month, 'MM-YYYY').format('MMMM YYYY');\n\n    const back = () => {\n        month.changeMonth('back');\n    };\n\n    const forward = () => {\n        month.changeMonth('forward');\n    };\n\n    let myStr = month.user;\n    let firstName = myStr.split(' ')[0];\n\n    return (\n        <header>\n            <div className='header-name_btn'>\n                <div className='header-username'>{firstName}</div>\n                <button onClick={month.logOutHandler} className='logOutBtn'>\n                    Sign out\n                </button>\n            </div>\n            <div className='header'>\n                <BiChevronLeft\n                    type='submit'\n                    onClick={back}\n                    className='header-arrow'\n                />\n                <h1>{formatMonth}</h1>\n                <BiChevronRight\n                    type='submit'\n                    onClick={forward}\n                    className='header-arrow'\n                />\n            </div>\n        </header>\n    );\n}\n\nexport default Header;\n","import React, { useState } from 'react';\n\nfunction NewTodo(day) {\n    let [change, setChange] = useState('');\n    let [time, setTime] = useState('');\n\n    const onChange = (e) => {\n        setChange(e.target.value);\n    };\n\n    const timeHandler = (e) => {\n        setTime(e.target.value);\n    };\n\n    const onSubmit = (e) => {\n        let sendInfo = { text: change, time: time };\n\n        e.preventDefault();\n        day.inputToDo(sendInfo);\n        setChange('');\n        setTime();\n        document.getElementById('appt').value = '';\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <input\n                    onChange={onChange}\n                    type='text'\n                    value={change}\n                    placeholder='New Todo'\n                    id='newTodoInput'\n                    maxLength='20'\n                    required\n                />\n                <input\n                    type='time'\n                    id='appt'\n                    name='appt'\n                    onChange={timeHandler}\n                />\n                <button type='submit' id='newTodoBtn'>\n                    +\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewTodo;\n","import moment from 'moment';\nimport React from 'react';\nimport { BiCheck, BiTrash } from 'react-icons/bi';\n\nfunction Today({ clickedDay, todos, onDelete, onToggle, editTodo }) {\n    let formatDate = moment(clickedDay, 'DD-MM-YYYY').format('D MMMM YY');\n\n    if (todos === undefined) {\n        return <div className='aside-container loading'>Loading...</div>;\n    } else {\n        return (\n            <article className='today-todo_container'>\n                <h1>{formatDate}</h1>\n                {todos\n                    .sort((a, b) => (b.time < a.time ? 1 : -1))\n                    .filter((todo) => todo.date === clickedDay)\n                    .map((todo) => (\n                        <div className='todo' key={todo._id}>\n                            <div\n                                className={`${\n                                    todo.done === true ? 'reminder' : ''\n                                }`}\n                            >\n                                <div\n                                    className='todo-click-box'\n                                    onClick={() => {\n                                        editTodo(todo);\n                                    }}\n                                >\n                                    {todo.text}\n                                    {'  '}\n                                    <span className='todo-time_date'>\n                                        {todo.time}\n                                    </span>\n                                    <span className='todo-time_date'>\n                                        {todo.date}\n                                    </span>\n                                </div>\n                                <div>\n                                    <BiCheck\n                                        style={{\n                                            color: '#777777',\n                                            cursor: 'pointer',\n                                            fontSize: '1.1rem',\n                                        }}\n                                        onClick={() =>\n                                            onToggle({\n                                                id: todo._id,\n                                                done: todo.done,\n                                            })\n                                        }\n                                    />\n                                    <BiTrash\n                                        style={{\n                                            color: '#777777',\n                                            cursor: 'pointer',\n                                            marginLeft: '1px',\n                                            marginRight: '-5px',\n                                        }}\n                                        onClick={() => onDelete(todo._id)}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n            </article>\n        );\n    }\n}\n\nexport default Today;\n","import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const auth = getAuth(app);\n","import React, { useState } from 'react';\nimport { auth } from '../Firebase/firebase';\nimport { signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\n\nfunction Login({ userInfo, newUserInfo, errorMsg, emailExist, googleLogin }) {\n    let [email, setEmail] = useState('');\n    let [password, setPassword] = useState('');\n    let [hasAccount, setHasAccount] = useState(true);\n\n    let [newUserName, setNewUserName] = useState('');\n    let [newEmail, setNewEmail] = useState('');\n    let [newPassword, setNewPassword] = useState('');\n\n    const emailHandler = (e) => {\n        setEmail(e.target.value.toLowerCase());\n    };\n\n    const pWordHandler = (e) => {\n        setPassword(e.target.value);\n    };\n\n    async function signInWithGoogle() {\n        const provider = new GoogleAuthProvider();\n        try {\n            const res = await signInWithPopup(auth, provider);\n            let googleUserInfo = {\n                email: res.user.email,\n                userName: res.user.displayName,\n            };\n            googleLogin(googleUserInfo);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const newUserHandler = (e) => {\n        e.preventDefault();\n\n        let newUser = {\n            userName: newUserName,\n            email: newEmail,\n            passWord: newPassword,\n        };\n\n        newUserInfo(newUser);\n    };\n\n    const sendUserInfo = (e) => {\n        e.preventDefault();\n        let info = { email, password };\n        userInfo(info);\n    };\n\n    const showPassword = () => {\n        let pwType = document.getElementById('passWord');\n        if (pwType.type === 'password') {\n            pwType.type = 'text';\n        } else {\n            pwType.type = 'password';\n        }\n    };\n\n    const showNewPassword = () => {\n        let pw = document.getElementById('newPassWord');\n        if (pw.type === 'password') {\n            pw.type = 'text';\n        } else {\n            pw.type = 'password';\n        }\n    };\n\n    return (\n        <>\n            {hasAccount ? (\n                <div className='login-page'>\n                    <div id='logInContainer'>\n                        <div id='logInInputs'>\n                            <form onSubmit={sendUserInfo}>\n                                <input\n                                    type='email'\n                                    placeholder='EMAIL'\n                                    id='userName'\n                                    className='logInField'\n                                    onChange={emailHandler}\n                                    value={email}\n                                    required\n                                />\n                                <input\n                                    type='password'\n                                    placeholder='PASSWORD'\n                                    id='passWord'\n                                    className='logInField'\n                                    onChange={pWordHandler}\n                                    value={password}\n                                    required\n                                />\n                                <div\n                                    className='eye-icon'\n                                    onClick={showPassword}\n                                >\n                                    Show password\n                                </div>\n                                {errorMsg ? (\n                                    <p id='errorMsg'>Sorry, invalid login!</p>\n                                ) : (\n                                    ''\n                                )}\n                                <button type='submit' id='logInBtn'>\n                                    Sign in\n                                </button>\n                                <p\n                                    onClick={() => setHasAccount(!hasAccount)}\n                                    id='signUp'\n                                >\n                                    Create account\n                                </p>\n                                <hr />\n                                <h4>OR</h4>\n                                <div\n                                    className='google-btn'\n                                    onClick={signInWithGoogle}\n                                >\n                                    <div className='google-icon-wrapper'>\n                                        <img\n                                            className='google-icon'\n                                            src='https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg'\n                                            alt='google icon'\n                                        />\n                                    </div>\n                                    <p className='btn-text'>\n                                        <b>Sign in with google</b>\n                                    </p>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className='login-page'>\n                    <div id='newLogInContainer'>\n                        <div id='logInInputs'>\n                            <form onSubmit={newUserHandler}>\n                                <input\n                                    type='text'\n                                    placeholder='CHOOSE NAME'\n                                    id='newUserName'\n                                    className='logInField'\n                                    required='required'\n                                    onChange={(e) =>\n                                        setNewUserName(e.target.value)\n                                    }\n                                    value={newUserName}\n                                />\n                                <input\n                                    type='email'\n                                    placeholder='CHOOSE EMAIL'\n                                    id='newEmail'\n                                    className='logInField'\n                                    required='required'\n                                    onChange={(e) =>\n                                        setNewEmail(\n                                            e.target.value.toLowerCase()\n                                        )\n                                    }\n                                    value={newEmail}\n                                />\n                                <input\n                                    type='password'\n                                    placeholder='CHOOSE PASSWORD'\n                                    id='newPassWord'\n                                    className='logInField'\n                                    required='required'\n                                    onChange={(e) =>\n                                        setNewPassword(e.target.value)\n                                    }\n                                    value={newPassword}\n                                />\n                                <div\n                                    className='eye-icon new-icon'\n                                    onClick={showNewPassword}\n                                >\n                                    Show password\n                                </div>\n                                {emailExist ? (\n                                    <p id='errorMsg'>Email already exist!</p>\n                                ) : (\n                                    ''\n                                )}\n                                <button id='createAccount'>\n                                    Create account\n                                </button>\n                                <p\n                                    onClick={() => setHasAccount(!hasAccount)}\n                                    id='signUp'\n                                >\n                                    Have an account? Sign in\n                                </p>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default Login;\n","import React from 'react';\nimport { BiTrash } from 'react-icons/bi';\n\nfunction Notes({ notes, onDelete }) {\n    if (notes === undefined) {\n        return <div className='aside-container loading'>Loading...</div>;\n    } else {\n        return (\n            <article className='today-todo_container'>\n                <h1>Notes</h1>\n                {notes.map((note) => (\n                    <div className='todo' key={note._id}>\n                        <div>\n                            {note.note}\n                            {'  '}\n                            <div>\n                                <BiTrash\n                                    style={{\n                                        color: '#777777',\n                                        cursor: 'pointer',\n                                        marginLeft: '1px',\n                                        marginRight: '-5px',\n                                    }}\n                                    onClick={() => onDelete(note._id)}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </article>\n        );\n    }\n}\n\nexport default Notes;\n","import React, { useState } from 'react';\n\nfunction NewNote({ newNote }) {\n    let [change, setChange] = useState('');\n\n    const onChange = (e) => {\n        setChange(e.target.value);\n    };\n\n    const onSubmit = (e) => {\n        let sendInfo = change;\n\n        e.preventDefault();\n        newNote(sendInfo);\n        setChange('');\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <input\n                    onChange={onChange}\n                    type='text'\n                    value={change}\n                    placeholder='New Note'\n                    id='newNoteInput'\n                    required\n                />\n                <button type='submit' id='newTodoBtn'>\n                    +\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewNote;\n","import React, { useState, useEffect, useRef } from 'react';\n\nfunction Edit({ todo, updatedTodo, closeEdit }) {\n    let [theTodo, setTheTodo] = useState(todo);\n    let editRef = useRef();\n\n    useEffect(() => {\n        let handler = (event) => {\n            if (!editRef.current.contains(event.target)) {\n                closeEdit('');\n            }\n        };\n\n        document.addEventListener('mousedown', handler);\n\n        return () => {\n            document.removeEventListener('mousedown', handler);\n        };\n    });\n\n    const onChange = (event) => {\n        setTheTodo((prevState) => ({\n            ...prevState,\n            [event.target.id]: event.target.value,\n        }));\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        updatedTodo(theTodo);\n    };\n\n    return (\n        <div className='edit-container' ref={editRef}>\n            <form onSubmit={onSubmit}>\n                <input\n                    type='text'\n                    value={theTodo.text}\n                    onChange={onChange}\n                    id='text'\n                />\n                <br />\n                <input\n                    type='time'\n                    value={theTodo.time}\n                    onChange={onChange}\n                    id='time'\n                />\n                <br />\n\n                <input\n                    type='text'\n                    value={theTodo.date}\n                    onChange={onChange}\n                    id='date'\n                />\n                <br />\n\n                <button type='submit'>Save</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Edit;\n","import moment from 'moment';\nimport { useState, useEffect } from 'react';\nimport './css/style.css';\nimport AllTodos from './components/AllTodos';\nimport Calendar from './components/Calendar';\nimport Header from './components/Header';\nimport NewTodo from './components/NewTodo';\nimport Today from './components/Today';\nimport Login from './components/Login';\nimport Notes from './components/Notes';\nimport NewNote from './components/NewNote';\nimport Edit from './components/Edit';\nimport { auth } from './Firebase/firebase';\nimport { signOut } from 'firebase/auth';\n\nmoment.updateLocale('sv', {\n    week: {\n        dow: 1,\n    },\n});\n\nfunction App() {\n    // - - - - -  - -  LOGIN / USER - - - -  - - - //\n    let [user, setUser] = useState('');\n    let [errorMsg, setErrorMsg] = useState();\n    let [emailExist, setEmailExist] = useState();\n\n    // USER\n    const userInfo = (info) => {\n        fetch('https://calendar-backend-mathildap.herokuapp.com/users', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({ info }),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                if (jsonRes === 'error') {\n                    setErrorMsg('error');\n                    return;\n                }\n                setUser({ userName: jsonRes.username, id: jsonRes.id });\n                setErrorMsg();\n            });\n    };\n\n    // NEW USER\n    const newUserInfo = (newUser) => {\n        fetch('https://calendar-backend-mathildap.herokuapp.com/users/new', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({ newUser }),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                if (jsonRes === 'email exist') {\n                    setEmailExist('email exist');\n                    return;\n                }\n                setUser({ userName: jsonRes.username, id: jsonRes.id });\n                setEmailExist();\n            });\n    };\n\n    // GOOGLE LOGIN\n    const googleLogin = (info) => {\n        fetch(\n            'https://calendar-backend-mathildap.herokuapp.com/users/googleLogin',\n            {\n                method: 'post',\n                headers: { 'Content-type': 'application/json' },\n                body: JSON.stringify({ info }),\n            }\n        )\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                const googleUser = {\n                    userName: jsonRes.username,\n                    id: jsonRes.id,\n                    googleLogin: jsonRes.googleLogin,\n                };\n                setUser(googleUser);\n            })\n            .catch((err) => console.log(err));\n    };\n\n    // LOG OUT\n    const logOutHandler = () => {\n        setUser('');\n        if (user.googleLogin === true) {\n            console.log('google logout');\n            signOut(auth);\n        }\n    };\n\n    // - - - - -  - -  GET / CHANGE MONTH - - - -  - - - //\n    let [monthInNr, setMonthInNr] = useState(moment().format('MM-YYYY'));\n\n    // CHANGE MONTH\n    const changeMonth = (changeMonth) => {\n        if (changeMonth === 'back') {\n            let newMonth = minusMonth(monthInNr);\n            setMonthInNr(newMonth);\n        } else if (changeMonth === 'forward') {\n            let newMonth = plusMonth(monthInNr);\n            setMonthInNr(newMonth);\n        }\n    };\n\n    let minusMonth = (cMonth) => {\n        let monthDate = moment(cMonth, 'MM-YYYY')\n            .add(-1, 'month')\n            .format('MM-YYYY');\n        let monthNr = moment(monthInNr, 'MM-YYYY')\n            .add(-1, 'month')\n            .format('MM-YYYY');\n        setMonthInNr(monthNr);\n        return monthDate;\n    };\n\n    let plusMonth = (cMonth) => {\n        let monthDate = moment(cMonth, 'MM-YYYY')\n            .add(1, 'month')\n            .format('MM-YYYY');\n        let monthNr = moment(monthInNr, 'MM-YYYY')\n            .add(1, 'month')\n            .format('MM-YYYY');\n        setMonthInNr(monthNr);\n        return monthDate;\n    };\n\n    // - - - - -  - -  FETCH HOLIDAY API - - - -  - - - //\n    let [apiYear, setApiYear] = useState(monthInNr.slice(-4));\n    let [api, setApi] = useState([]);\n\n    useEffect(() => {\n        let HOLIDAY_API = '';\n        let useMonth;\n\n        useMonth = monthInNr.slice(0, 2);\n        setApiYear(monthInNr.slice(-4));\n        HOLIDAY_API +=\n            'https://sholiday.faboul.se/dagar/v2.1/' + apiYear + '/' + useMonth;\n        fetch(HOLIDAY_API)\n            .then((resp) => resp.json())\n            .then((data) => {\n                setApi(data.dagar);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, [monthInNr]);\n\n    // - - - - -  - -  GET / CHANGE DAYS - - - -  - - - //\n    let [days, setDays] = useState([]);\n    let [emptyDays, setEmptyDays] = useState(moment());\n\n    // GET DAYS BY MONTH\n    const getDaysArrayByMonth = () => {\n        const currentMonthDates = Array.from(\n            { length: moment(monthInNr, 'MM').daysInMonth() },\n            (x, i) =>\n                moment(monthInNr, 'MM')\n                    .startOf('month')\n                    .add(i, 'days')\n                    .format('DD')\n        );\n        setDays(currentMonthDates);\n    };\n\n    // GET WHICH DAY THE MONTH BEGINS\n    const getEmptyDays = () => {\n        let firstDay = moment(monthInNr, 'MM-YYYY')\n            .startOf('month')\n            .add(-1, 'days')\n            .format('d');\n        setEmptyDays(firstDay);\n    };\n\n    // UPDATE IF MONTH CHANGES\n    useEffect(() => {\n        getDaysArrayByMonth();\n        getEmptyDays();\n    }, [monthInNr]);\n\n    // - - - - -  - -  CHOOSED DAY - - - -  - - - //\n    let [clickedDay, setClickedDay] = useState(moment().format('DD-MM-YYYY'));\n    let [newTodoDay, setNewTodoDay] = useState(moment().format('DD-MM-YYYY'));\n\n    // SET CLICKED DAY\n    const choosedDay = (answer) => {\n        setNewTodoDay(answer.id);\n        setClickedDay(answer.id);\n    };\n\n    // - - - - -  - -  TODOS - - - -  - - - //\n    let [todos, setTodos] = useState();\n\n    // POST NEW TODO TO DB\n    const sendTodo = (todo) => {\n        let saveTodo = {\n            userId: user.id,\n            text: todo.text,\n            time: todo.time,\n            date: newTodoDay,\n            done: false,\n        };\n\n        fetch('https://calendar-backend-mathildap.herokuapp.com/new', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(saveTodo),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => setTodos(jsonRes));\n    };\n\n    // GET TODOS FROM DB\n    // useEffect(() => {\n    //     let userId = user.id;\n\n    //     fetch('https://calendar-backend-mathildap.herokuapp.com/get', {\n    //         method: 'post',\n    //         headers: { 'Content-type': 'application/json' },\n    //         body: JSON.stringify({ userId }),\n    //     })\n    //         .then((res) => res.json())\n    //         .then((jsonRes) => setTodos(jsonRes));\n    // }, [user]);\n\n    // GET TODOS FROM DB\n    useEffect(() => {\n        getUsersTodos();\n    }, [user]);\n\n    async function getUsersTodos() {\n        let userId = user.id;\n\n        try {\n            const res = await fetch(\n                'https://calendar-backend-mathildap.herokuapp.com/get',\n                {\n                    method: 'post',\n                    headers: { 'Content-type': 'application/json' },\n                    body: JSON.stringify({ userId }),\n                }\n            ).then((resp) => resp.json());\n            setTodos(res);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    // DELETE TODO\n    const deleteTask = (id) => {\n        let todoId = { id: id, userId: user.id };\n        fetch('https://calendar-backend-mathildap.herokuapp.com/delete', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(todoId),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                setTodos(jsonRes);\n            });\n    };\n\n    // TOGGLE DONE\n    const toggleReminder = (id) => {\n        let trueOrFalse;\n\n        if (id.done === true) {\n            trueOrFalse = false;\n        } else {\n            trueOrFalse = true;\n        }\n\n        let todoId = { id: id.id, done: trueOrFalse, userId: user.id };\n\n        fetch('https://calendar-backend-mathildap.herokuapp.com/update', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(todoId),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                setTodos(jsonRes);\n            });\n    };\n\n    // EDIT TODO\n    let [todoEdit, setTodoEdit] = useState('');\n\n    const editTodo = (todo) => {\n        setTodoEdit(todo);\n    };\n\n    const updatedTodo = (info) => {\n        console.log(info);\n\n        fetch('https://calendar-backend-mathildap.herokuapp.com/edit', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(info),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                setTodos(jsonRes);\n                setTodoEdit('');\n            });\n    };\n\n    // - - - - -  - -  NOTES - - - -  - - - //\n    let [notes, setNotes] = useState();\n\n    // NEW NOTE\n    const newNote = (note) => {\n        let saveNote = {\n            userId: user.id,\n            note: note,\n            done: false,\n        };\n\n        fetch(\n            'https://calendar-backend-mathildap.herokuapp.com/notes/newNote',\n            {\n                method: 'post',\n                headers: { 'Content-type': 'application/json' },\n                body: JSON.stringify(saveNote),\n            }\n        )\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                setNotes(jsonRes);\n            });\n    };\n\n    // GET NOTES FROM DB\n    useEffect(() => {\n        let userId = user.id;\n\n        fetch('https://calendar-backend-mathildap.herokuapp.com/notes/get', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({ userId }),\n        })\n            .then((res) => res.json())\n            .then((jsonRes) => setNotes(jsonRes));\n    }, [user]);\n\n    // DELETE NOTE\n    const deleteNote = (id) => {\n        let noteId = { id: id, userId: user.id };\n\n        fetch('https://calendar-backend-mathildap.herokuapp.com/notes/delete', {\n            method: 'post',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(noteId),\n        })\n            .then((resp) => resp.json())\n            .then((jsonRes) => {\n                setNotes(jsonRes);\n            });\n    };\n\n    return (\n        <main>\n            {user === '' ? (\n                <Login\n                    userInfo={userInfo}\n                    newUserInfo={newUserInfo}\n                    googleLogin={googleLogin}\n                    errorMsg={errorMsg}\n                    emailExist={emailExist}\n                />\n            ) : (\n                <>\n                    <Header\n                        month={monthInNr}\n                        changeMonth={changeMonth}\n                        user={user.userName}\n                        logOutHandler={logOutHandler}\n                    />\n                    <section className='main-container'>\n                        <Calendar\n                            monthInNr={monthInNr}\n                            days={days}\n                            api={api}\n                            firstDayOfMonth={emptyDays}\n                            clickedDay={choosedDay}\n                            todos={todos}\n                            onDelete={deleteTask}\n                            onToggle={toggleReminder}\n                        />\n                        <aside>\n                            <div className='aside-container'>\n                                <Today\n                                    clickedDay={clickedDay}\n                                    todos={todos}\n                                    onDelete={deleteTask}\n                                    onToggle={toggleReminder}\n                                    editTodo={editTodo}\n                                />\n                                <NewTodo\n                                    clickedDay={clickedDay}\n                                    inputToDo={sendTodo}\n                                />\n                            </div>\n                            <div className='aside-container'>\n                                <Notes notes={notes} onDelete={deleteNote} />\n                                <NewNote newNote={newNote} />\n                            </div>\n                            <AllTodos\n                                todos={todos}\n                                onDelete={deleteTask}\n                                onToggle={toggleReminder}\n                                editTodo={editTodo}\n                            />\n                        </aside>\n                    </section>\n                    {todoEdit === '' ? (\n                        ''\n                    ) : (\n                        <Edit\n                            todo={todoEdit}\n                            updatedTodo={updatedTodo}\n                            closeEdit={() => setTodoEdit('')}\n                        />\n                    )}\n                </>\n            )}\n        </main>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}